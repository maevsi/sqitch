%syntax-version=1.0.0
%project=vibetype
%uri=https://github.com/maevsi/vibetype/

privilege_execute_revoke 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Revoke execute privilege from public.
role_grafana 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role grafana.
database_grafana [role_grafana] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add the database for grafana.
role_postgraphile 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add role postgraphile.
role_anonymous [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add role anonymous.
role_account [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add role account.
role_vibetype [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add role vibetype.
schema_public [role_anonymous role_account role_vibetype] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add public schema.
schema_private 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add private schema.
extension_pgcrypto [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add extension pgcrypto.
function_invoker_account_id [privilege_execute_revoke schema_public role_account role_anonymous role_vibetype] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Returns the session's account id.
enum_invitation_feedback [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Possible answers to an invitation: accepted, canceled.
enum_event_visibility [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Possible visibilities of events and event groups: public, private and unlisted.
function_trigger_metadata_update [privilege_execute_revoke schema_public function_invoker_account_id role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Trigger function to automatically update metadata fields `updated_at` and `updated_by` when a row is modified. Sets `updated_at` to the current timestamp and `updated_by` to the account ID of the invoker.
table_notification [schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Notifications that are sent via pg_notify.
table_account_private [schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add private table account.
table_account_public [schema_public schema_private table_account_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add public table account.
table_account_block [schema_public table_account_public] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Blocking of an account by another account.
function_account_block_ids [schema_public table_account_block role_account role_anonymous function_invoker_account_id] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Function returning all account id's involved in blocking.
table_account_public_policy [schema_public table_account_public role_account role_anonymous function_account_block_ids function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Policies for public accounts.
enum_language [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Supported ISO 639 language codes.
function_language_iso_full_text_search [privilege_execute_revoke schema_public enum_language] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # ISO language code to full text search language conversion.
table_address [schema_public table_account_public function_trigger_metadata_update] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Stores detailed address information, including lines, city, state, country, and metadata.
table_event [schema_public table_address table_account_public enum_language enum_event_visibility function_language_iso_full_text_search role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add table event.
function_events_organized [privilege_execute_revoke schema_public function_invoker_account_id table_event role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is the creator.
enum_invitation_feedback_paper 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Possible choices on how to receive a paper invitation: paper, digital.
table_contact [schema_public table_account_public table_address enum_language role_account function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add table contact.
table_guest [schema_public table_event table_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add table guest.
function_events_invited [privilege_execute_revoke schema_private schema_public table_guest table_contact function_invoker_account_id function_account_block_ids role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is invited.
function_guest_claim_array [privilege_execute_revoke schema_public table_guest function_invoker_account_id function_account_block_ids role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns the current guest claims as UUID array.
function_guest_contact_ids [privilege_execute_revoke schema_public table_guest function_guest_claim_array function_events_organized function_account_block_ids role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is invited.
table_contact_policy [schema_public table_contact role_account role_anonymous function_invoker_account_id function_account_block_ids function_guest_contact_ids] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add policy for table contact.
function_guest_count [privilege_execute_revoke schema_public table_guest role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns the guest count for an event.
table_event_policy [schema_public table_event role_account role_anonymous function_guest_count function_account_block_ids function_invoker_account_id schema_private function_events_invited] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add policy for table event.
table_address_policy [schema_public table_address role_anonymous role_account function_invoker_account_id table_event_policy function_account_block_ids] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add policy for table address.
function_event_guest_count_maximum [privilege_execute_revoke schema_public table_event function_guest_count function_invoker_account_id schema_private function_events_invited role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that returns the maximum guest count of an accessible event.
table_guest_policy [schema_public table_guest role_account role_anonymous function_guest_claim_array function_invoker_account_id function_events_organized function_account_block_ids function_event_guest_count_maximum] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add policy for table contact.
type_jwt [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add type jwt.
table_legal_term [schema_public role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Legal terms like privacy policies or terms of service.
table_legal_term_acceptance [schema_public table_account_public table_legal_term role_account function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Tracks each user account's acceptance of legal terms and conditions.
function_account_registration [privilege_execute_revoke schema_public schema_private table_account_private table_account_public extension_pgcrypto table_legal_term_acceptance table_contact table_notification role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function account registration.
table_jwt [schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add table for JWTs.
function_account_email_address_verification [privilege_execute_revoke schema_private schema_public role_account role_anonymous table_account_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Sets the account's email address verification code to `NULL` for which the email address verification code equals the one passed and is up to date.
function_authenticate [privilege_execute_revoke schema_public role_account role_anonymous type_jwt table_account_private table_jwt function_account_registration function_account_email_address_verification] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function to authenticate accounts.
function_account_password_change [privilege_execute_revoke schema_public schema_private role_account table_account_private extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that allows to change an account's password.
type_event_unlock_response [schema_public type_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a type that is returned by guest id redemption.
function_event_unlock [privilege_execute_revoke schema_public function_invoker_account_id table_event table_guest function_guest_claim_array type_jwt table_jwt type_event_unlock_response] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that assigns a guest to the current session
function_jwt_refresh [privilege_execute_revoke schema_public type_jwt table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that refreshes tokens.
table_upload [schema_public table_account_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # An upload.
table_profile_picture [schema_public table_account_public table_upload role_account role_anonymous role_vibetype function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Mapping of usernames to upload storage keys.
table_upload_policy [schema_public table_upload role_account role_anonymous role_vibetype function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Policies for uploads.
function_profile_picture_set [privilege_execute_revoke schema_public role_account table_profile_picture] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Sets the picture with the given storage key as the invoker's profile picture.
function_event_delete [privilege_execute_revoke schema_public role_account table_account_private table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that allows to delete an event.
function_account_delete [privilege_execute_revoke schema_public role_account table_account_private table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Add a function that allows to delete an account.
function_account_password_reset_request [privilege_execute_revoke schema_public schema_private table_account_private table_notification role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Sets a new password reset verification code for an account.
function_account_password_reset [privilege_execute_revoke schema_private schema_public table_account_private extension_pgcrypto role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Sets a new password for an account if there was a request to do so before that's still up to date.
function_invite [privilege_execute_revoke schema_public table_guest function_events_organized table_event table_contact schema_private table_account_private table_profile_picture table_notification role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Adds a notification for the invitation channel.
function_account_registration_refresh [privilege_execute_revoke schema_public schema_private table_account_private table_notification role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Refreshes an account's email address verification validity period.
function_notification_acknowledge [privilege_execute_revoke schema_public schema_private table_notification role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Allows to set the acknowledgement state of a notification.
function_account_upload_quota_bytes [privilege_execute_revoke schema_public schema_private table_account_private role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Gets the total upload quota in bytes for the invoking account.
enum_achievement_type [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Achievement enumeration.
table_achievement_code [schema_private schema_public enum_achievement_type] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Codes that unlock achievements.
table_achievement [schema_public table_account_public enum_achievement_type role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Achievement unlocks by user.
function_achievement_unlock [privilege_execute_revoke schema_public enum_achievement_type function_invoker_account_id schema_private table_achievement_code table_achievement role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Unlock achievements.
table_report [schema_public table_account_public table_event table_upload] 1970-01-01T00:00:00Z Marlon <marlon@maev.si> # Stores reports made by users on other users, events, or uploads for moderation purposes.
enum_social_network [schema_public] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Social networks.
table_account_social_network [schema_public table_account_public enum_social_network] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Links accounts to their social media profiles.
enum_event_size [schema_public] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Possible event sizes: small, medium, large, huge.
table_preference_event_size [schema_public table_account_public enum_event_size] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Table for the user accounts' preferred event sizes (M:N relationship).
table_event_upload [schema_public table_event table_upload] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Add table event_upload.
view_guest_flat [schema_public table_guest table_contact table_event role_account role_anonymous] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # View returning flattened guests.
table_event_category [schema_public] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Event categories.
table_preference_event_category [schema_public table_account_public table_event_category] 1970-01-01T00:00:00Z marlon <marlon@t14s> # Event categories a user account is interested in (M:N relationship).
table_event_category_mapping [schema_public table_event table_event_category] 1970-01-01T00:00:00Z marlon <marlon@t14s> # Mapping events to categories (M:N relationship).
table_event_recommendation [schema_public table_account_public table_event] 1970-01-01T00:00:00Z marlon <marlon@t14s> # Events recommended to a user account (M:N relationship).
table_event_favorite [schema_public table_account_public table_event] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # A table for the user accounts' favorite events.
function_guest_create_multiple [schema_public table_guest role_account] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Function for inserting multiple guest records.
function_event_search [privilege_execute_revoke schema_public enum_language schema_private function_language_iso_full_text_search table_event role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Full-text search on events.
table_device [schema_public table_account_public function_trigger_metadata_update] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # A device that's assigned to an account.
enum_friendship_status [schema_public] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Possible status values of a friend relation.
table_friendship [schema_public enum_friendship_status table_account_public function_trigger_metadata_update] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # A friend relation together with its status.
table_event_format [schema_public role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Table for storing event formats.
table_event_format_mapping [schema_public table_event table_event_format role_anonymous role_account function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Table for storing event to category (M:N) relationships.
table_audit_log [schema_private] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Table for storing audit log records.
view_audit_log_trigger [schema_private] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # View showing all audit log triggers.
function_audit_log [schema_private table_audit_log view_audit_log_trigger] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Utility functions for managing audit log triggers.
table_preference_event_format [schema_public table_account_public table_event_category] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Event formats a user account is interested in (M:N relationship).
function_account_location_update [privilege_execute_revoke schema_public table_account_private function_invoker_account_id role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Sets the location for the invoker's account.
table_preference_event_location [schema_public table_account_public role_account function_invoker_account_id] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+vibetype/sqitch@jonas-thelemann.de> # Stores preferred event locations for user accounts, including coordinates and search radius.
role_zammad 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Add role zammad.
database_zammad [role_zammad] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Add the database for zammad.
