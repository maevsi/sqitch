%syntax-version=1.0.0
%project=maevsi
%uri=https://github.com/maevsi/maevsi/

privilege_execute_revoke 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Revoke execute privilege from public.
role_postgraphile 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role postgraphile.
role_anonymous [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role anonymous.
role_account [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role account.
role_tusd [role_postgraphile] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role tusd.
schema_public [role_anonymous role_account role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add public schema.
schema_private 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add private schema.
extension_pgcrypto [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add extension pgcrypto.
enum_invitation_feedback [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Possible answers to an invitation: accepted, canceled.
enum_event_visibility [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Possible visibilities of events and event groups: public, private.
table_notification [schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Notifications that are sent via pg_notify.
table_account_private [schema_private schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add private table account.
table_account_public [schema_public schema_private table_account_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add public table account.
table_event_group [schema_public role_account role_anonymous table_account_public enum_event_visibility] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table event_group.
index_event_group_author_username [table_event_group] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the event group table's author_username field.
table_event [schema_public role_account role_anonymous table_account_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table event.
function_events_organized [privilege_execute_revoke schema_public table_event role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is the author.
function_invitation_claim_array [privilege_execute_revoke schema_public role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns the current invitation claims as UUID array.
index_event_author_username [table_event] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the event table's username field.
enum_invitation_feedback_paper 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Possible choices on how to receive a paper invitation: paper, digital.
enum_language [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Supported ISO 639 language codes.
table_contact [schema_public enum_language role_account role_anonymous table_account_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table contact.
table_invitation [schema_public table_event table_contact] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table invitation.
function_events_invited [privilege_execute_revoke schema_private schema_public table_invitation table_contact role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is invited.
function_invitation_contact_ids [privilege_execute_revoke schema_public table_invitation function_invitation_claim_array function_events_organized role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns all event ids for which the invoker is invited.
table_contact_policy [schema_public table_contact role_account role_anonymous function_invitation_contact_ids] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add policy for table contact.
function_invitee_count [privilege_execute_revoke schema_public table_invitation role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns the invitee count for an event.
table_event_policy [schema_public table_event role_account role_anonymous schema_private function_events_invited] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add policy for table event.
index_invitation_event_id [table_invitation] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the invitation table's event_id field.
index_invitation_contact_id [table_invitation] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the invitation table's contact_id field.
function_event_invitee_count_maximum [privilege_execute_revoke schema_public table_event function_invitee_count schema_private function_events_invited role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that returns the maximum invitee count of an accessible event.
table_invitation_policy [schema_public table_invitation role_account role_anonymous function_invitation_claim_array function_events_organized function_event_invitee_count_maximum] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add policy for table contact.
table_event_grouping [schema_public role_account role_anonymous table_event table_event_group] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table event grouping.
index_event_grouping_event_id [table_event_grouping] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the event grouping table's event_id field.
index_event_grouping_event_group_id [table_event_grouping] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add an index to the event grouping table's event_group_id field.
type_jwt [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add type jwt.
function_account_registration [privilege_execute_revoke schema_public schema_private table_account_private table_account_public table_contact extension_pgcrypto table_notification role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function account registration.
table_jwt [schema_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add table for JWTs.
function_authenticate [privilege_execute_revoke schema_public role_account role_anonymous type_jwt table_account_private table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function to authenticate accounts.
function_account_password_change [privilege_execute_revoke schema_public schema_private role_account table_account_private extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that allows to change an account's password.
type_event_unlock_response [schema_public type_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a type that is returned by invitation id redemption.
function_event_unlock [privilege_execute_revoke schema_public table_invitation table_event type_event_unlock_response function_invitation_claim_array type_jwt table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that assigns an invitation to the current session
function_jwt_refresh [privilege_execute_revoke schema_public type_jwt table_jwt] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that refreshes tokens.
table_upload [schema_public table_account_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # An upload.
function_upload_create [privilege_execute_revoke schema_public schema_private role_account table_upload table_account_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Creates an upload with the given size if quota is available.
table_profile_picture [schema_public table_account_public table_upload role_account role_anonymous role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Mapping of usernames to upload storage keys.
table_upload_policy [schema_public table_upload role_account role_anonymous role_tusd] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Policies for uploads.
function_profile_picture_set [privilege_execute_revoke schema_public role_account table_profile_picture] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Sets the picture with the given storage key as the invoker's profile picture.
function_event_delete [privilege_execute_revoke schema_public role_account table_account_private table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that allows to delete an event.
function_account_delete [privilege_execute_revoke schema_public role_account table_account_private table_event extension_pgcrypto] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add a function that allows to delete an account.
function_account_email_address_verification [privilege_execute_revoke schema_private schema_public role_account role_anonymous table_account_private] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Sets the account's email address verification code to `NULL` for which the email address verification code equals the one passed and is up to date.
function_account_password_reset_request [privilege_execute_revoke schema_public schema_private table_account_private table_notification role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Sets a new password reset verification code for an account.
function_account_password_reset [privilege_execute_revoke schema_private schema_public table_account_private extension_pgcrypto role_anonymous role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Sets a new password for an account if there was a request to do so before that's still up to date.
function_event_is_existing [privilege_execute_revoke schema_public table_event role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Shows if an event exists.
function_invite [privilege_execute_revoke schema_public table_invitation function_events_organized table_event table_contact schema_private table_account_private table_profile_picture table_notification role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Adds a notification for the invitation channel.
function_account_registration_refresh [privilege_execute_revoke schema_public schema_private table_account_private table_notification role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Refreshes an account's email address verification validity period.
function_notification_acknowledge [privilege_execute_revoke schema_public schema_private table_notification role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Allows to set the acknowledgement state of a notification.
function_account_upload_quota_bytes [privilege_execute_revoke schema_public schema_private table_account_private role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Gets the total upload quota in bytes for the invoking account.
database_grafana 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Create observation dashboard's database.
role_grafana [database_grafana] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Add role grafana.
enum_achievement_type [schema_public] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Achievement enumeration.
table_achievement_code [schema_private schema_public enum_achievement_type] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Codes that unlock achievements.
table_achievement [schema_public table_account_public enum_achievement_type role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Achievement unlocks by user.
function_achievement_unlock [privilege_execute_revoke schema_public enum_achievement_type schema_private table_achievement_code table_achievement role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Unlock achievements.
table_report [schema_public table_account_public table_event table_upload] 1970-01-01T00:00:00Z Marlon <marlon@maev.si> # Stores reports made by users on other users, events, or uploads for moderation purposes.
table_report_policy [schema_public table_report role_account] 1970-01-01T00:00:00Z Marlon <marlon@maev.si> # Access policies for reports.
table_legal_term [schema_public role_account role_anonymous] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Legal terms like privacy policies or terms of service.
table_legal_term_acceptance [schema_public table_account_public table_legal_term role_account] 1970-01-01T00:00:00Z Jonas Thelemann <e-mail+maevsi/sqitch@jonas-thelemann.de> # Tracks each user account's acceptance of legal terms and conditions.
enum_social_network [schema_public] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Social networks.
table_account_social_network [schema_public table_account_public enum_social_network] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Links accounts to their social media profiles.
table_account_social_network_policy [schema_public table_account_social_network role_account] 1970-01-01T00:00:00Z sven <sven.thelemann@t-online.de> # Row level security policies for table account_social_network.
enum_event_size [schema_public] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Possible event sizes: small, medium, large, huge.
table_account_preference_event_size  [schema_public table_account_public enum_event_size] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Table for the user accounts' preferred event sizes (M:N relationship).
table_account_preference_event_size_policy  [schema_public table_account_preference_event_size role_account] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Security policy for table account_event_size_pref.
table_event_upload [schema_public table_event table_upload] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Add table event_upload.
table_event_upload_policy [schema_public table_event_upload table_event table_upload role_account role_anonymous] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # Grants and policies for table event_upload.
view_invitation_flat [schema_public table_invitation table_contact table_event role_account role_anonymous] 1970-01-01T00:00:00Z Sven Thelemann <sven.thelemann@t-online.de> # View returning flattened invitations.
